@page "/events"
@page "/events/list"
@inject EventService EventService

<PageTitle>Events - EventEase</PageTitle>

<h1>Event Management</h1>

<div class="mb-3">
    <a href="/events/create" class="btn btn-primary">
        <span class="bi bi-plus-circle"></span> Create New Event
    </a>
</div>

@if (events == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (!events.Any())
{
    <div class="alert alert-info">
        <p><em>No events found. <a href="/events/create">Create your first event</a></em></p>
    </div>
}
else
{
    <div class="row">
        @foreach (var eventItem in events)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 event-card">
                    <div class="card-body">
                        <h5 class="card-title">@eventItem.Title</h5>
                        <p class="card-text">@eventItem.Description</p>
                        <p class="card-text">
                            <small class="text-muted">
                                <i class="bi bi-calendar"></i> @eventItem.Date.ToString("MMM dd, yyyy")
                            </small>
                        </p>
                        <p class="card-text">
                            <small class="text-muted">
                                <i class="bi bi-clock"></i> @eventItem.Date.ToString("h:mm tt")
                            </small>
                        </p>
                        <p class="card-text">
                            <small class="text-muted">
                                <i class="bi bi-geo-alt"></i> @eventItem.Location
                            </small>
                        </p>
                        <p class="card-text">
                            <small class="text-muted">
                                <i class="bi bi-people"></i> @eventItem.RegisteredCount / @eventItem.Capacity
                            </small>
                        </p>
                        @if (!eventItem.IsPublic)
                        {
                            <span class="badge bg-warning text-dark mb-2">Private</span>
                        }
                    </div>
                    <div class="card-footer">
                        <a href="/events/details/@eventItem.Id" class="btn btn-outline-primary btn-sm">View Details</a>
                        <a href="/events/edit/@eventItem.Id" class="btn btn-outline-secondary btn-sm">Edit</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<EventEase.Services.EventItem>? events;

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            // Reload events when returning to this page
            await LoadEvents();
            StateHasChanged();
        }
    }

    private async Task LoadEvents()
    {
        events = await EventService.GetAllEventsAsync();
    }
}